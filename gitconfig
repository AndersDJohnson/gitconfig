# include requires git 1.7.10+ or some such
[include]
  path = ~/.gitconfig-dir/.gitconfig-user
  path = ~/.gitconfig-dir/.gitconfig-github
  path = ~/.gitconfig-dir/.gitconfig-host
  path = ~/.gitconfig-dir/.gitconfig.host
  path = ~/.gitconfig-dir/.gitconfig-dynamic
[color]
  ui = true
[push]
  # not supported in git 1.7.x
  #default = simple
  default = current
[alias]
  a = add
  acm = "!f() { git add $1; git cm $1; }; f"
  aa = add -A
  alias = "!f() { git config --global alias.$1 \"$2\"; }; f"
  aliases = "!git config -l | grep alias | cut -c 7-"
  ap = add -p
  au = add -u
  b = branch
  br = branch -r
  bu = branch -u
  bv = branch -v
  brv = branch -rv
  bl = blame --line-porcelain --
  c = commit
  ca = commit --amend
  can = commit --amend --no-edit
  cf        = diff --name-only --diff-filter=U
  cf = diff --diff-filter=U --name-only
  cl = clone
  cm = commit -m
  cn = commit --no-edit
  co = checkout
  conflicts =  diff --diff-filter=U
  conflicted = diff --diff-filter=U --name-only
  cp = cherry-pick
  d   = diff
  dw  = diff --color-words
  di  = diff
  diw = diff --color-words
  dn  = diff --name-only
  ds     = diff --staged --color-words
  dw = "!f() { git diff $@ | dwdiff --diff-input --color | less; }; f"
  f = fetch
  fixup    = commit --amend --no-edit
  fu       = commit --amend --no-edit
  ghcl = "!f() { if [[ \"$1\" =~ \"/\" ]]; then git clone https://github.com/$1.git; else git clone https://github.com/AndersDJohnson/$1.git; fi }; f"
  ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
  ig =     "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
  l  = log
  lg = log
  lgr = log --graph -n 20 --format='format:%C(blue)%h%C(reset) %C(black)%an%C(reset) %s %C(black bold)%cr%C(reset)%C(auto)%d%C(reset)' --date-order --tags --all
  last = diff --cached HEAD^
  lp = log --pretty=oneline --stat --decorate
  m = merge
  p = push
  pu = push
  pf = push --force
  pt = push --tags
  pft = push --follow-tags
  pl = pull
  pls = "!f() { git stash; git pull $@; git stash apply; }; f"
  plr = pull --rebase
  plrs = "!f() { git stash; git pull --rebase $@; git stash apply; }; f"
  plup = "!git fetch origin -v; git fetch upstream -v; git merge upstream/master"
  r = reset
  rb = rebase
  rbi = rebase -i
  rbc = rebase --continue
  rc       = commit --amend --no-edit
  recommit = commit --amend --no-edit
  reword = commit --amend
  rt = remote
  rtv = remote -v
  rw     = commit --amend
  rwm    = commit --amend -m
  s = status
  sb = status -sb
  sg     = diff --staged
  sgw    = diff --staged --color-words
  sgn    = diff --staged --name-only
  sgw    = "!git dw --staged"
  ss = status -s
  sst = status -s --untracked-files=no
  st = status
  stt = status --untracked-files=no
  staged = diff --staged
  t = tag
  tam = "!f() { git tag -a $1 -m $1; }; f"
  tl = tag -l
  this = diff --staged
  unadd = reset HEAD
  unalias = "!f() { git config --global --unset alias.$1; }; f"
  ux = update-index --chmod=+x
[url "https://"]
	insteadOf = git://
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[credential]
	helper = cache
[hub]
	protocol = https
[user]
	signingkey = A285AD72
[commit]
	gpgsign = true
[core]
	autocrlf = input
